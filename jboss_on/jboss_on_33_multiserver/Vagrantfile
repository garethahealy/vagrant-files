# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.require_version ">= 1.8.0"

# Install required Vagrant plugins
missing_plugins_installed = false
required_plugins = %w(vagrant-vbguest vagrant-hostmanager vagrant-cachier vagrant-triggers vagrant-auto_network)

required_plugins.each do |plugin|
  if !Vagrant.has_plugin? plugin
    system "vagrant plugin install #{plugin}"
    missing_plugins_installed = true
  end
end

# If any plugins were missing and have been installed, re-run vagrant
if missing_plugins_installed
  exec "vagrant #{ARGV.join(" ")}"
end

AutoNetwork.default_pool = '10.20.3.21/24'

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "garethahealy/centos72_java8"
  config.vm.box_version = "= 1.0.1"

  # Hashicorp atlas push
  config.push.define "atlas" do |push|
    push.app = "garethahealy/jboss_on_33"
  end

  # Config /etc/hosts via plugin
  config.hostmanager.enabled = true
  config.hostmanager.manage_host = true
  config.hostmanager.ignore_private_ip = false
  config.hostmanager.include_offline = true

  # Postgres DB
  config.vm.define "postgresmutli" do |postgresmutli|
    # Assign network config
    postgresmutli.vm.hostname = "postgresmutli.jbosson33.vagrant.local"
    postgresmutli.vm.network "private_network", ip: "10.20.3.21"

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    postgresmutli.vm.provision :shell, path: "bootstrap-postgres.sh", privileged: false

    # Complete message
    postgresmutli.vm.post_up_message = "vagrant ssh postgresmutli"
  end

  # JON Server 1
  config.vm.define "jonservermulti1" do |jonservermulti1|
    # Assign network config
    jonservermulti1.vm.hostname = "jonservermulti1.jbosson33.vagrant.local"
    jonservermulti1.vm.network "private_network", ip: "10.20.3.22"

    # Add the JBoss ON zips
    jonservermulti1.vm.provision "file", source: "~/.m2/repository/org/jboss/on/jon-server/3.3.0.GA/jon-server-3.3.0.GA.zip", destination: "/opt/rh/jon-server-3.3.0.GA.zip"
    jonservermulti1.vm.provision "file", source: "~/.m2/repository/org/jboss/on/jon-server-patch/3.3-update-04/jon-server-patch-3.3-update-04.zip", destination: "/opt/rh/jon-server-patch-3.3-update-04.zip"
    jonservermulti1.vm.provision "file", source: "~/.m2/repository/org/jboss/on/patch-common-collections/BZ-1281514/patch-common-collections-BZ-1281514.zip", destination: "/opt/rh/patch-common-collections-BZ-1281514.zip"
    jonservermulti1.vm.provision "file", source: "~/.m2/repository/org/jboss/on/jon-plugin-pack-fuse/3.3.0.GA/jon-plugin-pack-fuse-3.3.0.GA.zip", destination: "/opt/rh/jon-plugin-pack-fuse-3.3.0.GA.zip"
    jonservermulti1.vm.provision "file", source: "~/.m2/repository/org/jboss/on/jon-plugin-pack-fuse-patch/3.3.0.GA-update-03/jon-plugin-pack-fuse-patch-3.3.0.GA-update-03.zip", destination: "/opt/rh/jon-plugin-pack-fuse-patch-3.3.0.GA-update-03.zip"

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    jonservermulti1.vm.provision :shell, path: "bootstrap-jon.sh", privileged: false
    jonservermulti1.vm.provision :shell, path: "bootstrap-jon-server.sh", privileged: false

    # Complete message
    jonservermulti1.vm.post_up_message = "http://jonservermulti1.jbosson33.vagrant.local:7080/"
  end

  # JON Server 2
  config.vm.define "jonservermulti2" do |jonservermulti2|
    # Assign network config
    jonservermulti2.vm.hostname = "jonservermulti2.jbosson33.vagrant.local"
    jonservermulti2.vm.network "private_network", ip: "10.20.3.23"

    # Add the JBoss ON zips
    jonservermulti2.vm.provision "file", source: "~/.m2/repository/org/jboss/on/jon-server/3.3.0.GA/jon-server-3.3.0.GA.zip", destination: "/opt/rh/jon-server-3.3.0.GA.zip"
    jonservermulti2.vm.provision "file", source: "~/.m2/repository/org/jboss/on/jon-server-patch/3.3-update-04/jon-server-patch-3.3-update-04.zip", destination: "/opt/rh/jon-server-patch-3.3-update-04.zip"
    jonservermulti2.vm.provision "file", source: "~/.m2/repository/org/jboss/on/patch-common-collections/BZ-1281514/patch-common-collections-BZ-1281514.zip", destination: "/opt/rh/patch-common-collections-BZ-1281514.zip"
    jonservermulti2.vm.provision "file", source: "~/.m2/repository/org/jboss/on/jon-plugin-pack-fuse/3.3.0.GA/jon-plugin-pack-fuse-3.3.0.GA.zip", destination: "/opt/rh/jon-plugin-pack-fuse-3.3.0.GA.zip"
    jonservermulti2.vm.provision "file", source: "~/.m2/repository/org/jboss/on/jon-plugin-pack-fuse-patch/3.3.0.GA-update-03/jon-plugin-pack-fuse-patch-3.3.0.GA-update-03.zip", destination: "/opt/rh/jon-plugin-pack-fuse-patch-3.3.0.GA-update-03.zip"

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    jonservermulti2.vm.provision :shell, path: "bootstrap-jon.sh", privileged: false
    jonservermulti2.vm.provision :shell, path: "bootstrap-jon-server.sh", privileged: false

    # Complete message
    jonservermulti2.vm.post_up_message = "http://jonservermulti2.jbosson33.vagrant.local:7080/"
  end

  # JON Agent
  config.vm.define "jonagentmulti" do |jonagentmulti|
    # Assign network config
    jonagentmulti.vm.hostname = "jonagentmulti.jbosson33.vagrant.local"
    jonagentmulti.vm.network "private_network", ip: "10.20.3.24"

    # Add the JBoss Fuse zip and scripts
    jonagentmulti.vm.provision "file", source: "env/agent/agent-configuration-template.xml", destination: "/opt/rh/agent-configuration-template.xml"
    jonagentmulti.vm.provision "file", source: "~/.m2/repository/org/jboss/fuse/jboss-fuse-full/6.2.1.redhat-084/jboss-fuse-full-6.2.1.redhat-084.zip", destination: "/opt/rh/jboss-fuse-full-6.2.1.redhat-084.zip"
    jonagentmulti.vm.provision "file", source: "~/.m2/repository/com/garethahealy/fuse-setup/scaffolding-scripts/1.0.1/scaffolding-scripts-1.0.1-all.zip", destination: "/tmp/scaffolding-scripts.zip"

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    jonagentmulti.vm.provision :shell, path: "bootstrap-jon.sh", privileged: false
    jonagentmulti.vm.provision :shell, path: "bootstrap-jon-agent.sh", privileged: false

    # Complete message
    jonagentmulti.vm.post_up_message = "vagrant ssh jonagentmulti"
  end
end
